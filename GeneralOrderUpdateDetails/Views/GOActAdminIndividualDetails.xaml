<UserControl x:Class="GeneralOrderUpdateDetails.GOActAdminIndividualDetails"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:GeneralOrderUpdateDetails"
      xmlns:core="clr-namespace:GeneralOrderCore;assembly=GeneralOrderCore"
      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
      Height="{Binding UIHeight}" 
      Width="{Binding UIWidth}"     
      d:DataContext="{x:Static local:GOActAdminIndividualDetailsDM.Instance}"
      mc:Ignorable="d" >
  
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/GeneralOrderUpdateDetails;component/Styles/UIStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <StackPanel>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="200" />
            </Grid.ColumnDefinitions>

            <Border Padding="1" Background="{StaticResource WordBlueBrush}" >
                <Grid Background="White" Grid.Column="0" IsEnabled="{Binding Path=spinnerBool, Converter={local:ChangeBooleanConverter}, ConverterParameter=false,  Mode=TwoWay}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="15*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <Grid  Margin="0 0 0 0" Grid.Row="0">
                        <TextBlock Style="{StaticResource HeaderText}" FontSize="{Binding UIFontSize}"  FontFamily="{StaticResource CourRegular}" Text="{Binding windowTitle}"  HorizontalAlignment="Center" Margin="5" >
                          <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseEnter">
                                    <i:InvokeCommandAction Command="{Binding getApplicationWikiInformation}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBlock>
                    </Grid>
                    <Grid  Margin="0 0 0 0" Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*" />
                            <ColumnDefinition Width="2*" />
                            <ColumnDefinition Width="15*"/>
                            <ColumnDefinition Width="4*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock   Grid.Column="0" FontSize="{Binding UIFontSize}"   Style="{StaticResource RegularText}" Text="Act" Margin="10 0"/>
                        <TextBlock Grid.Column="1"  FontSize="{Binding UIFontSize}"  Style="{StaticResource RegularText}" Text="{Binding actNumber}" >
                                  <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseEnter">
                                        <i:InvokeCommandAction Command="{Binding getActNumberWikiInformation}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                        </TextBlock>

                        <TextBlock Grid.Column="2" FontSize="{Binding UIFontSize}"  Style="{StaticResource RegularText}" Text="{Binding Path=actTitle}" />

                        <TextBlock Grid.Column="3" FontSize="{Binding UIFontSize}"  Style="{StaticResource RegularText}" Text="{Binding Path=actDate}" />
                    </Grid>

                    <Grid  Margin="0 0 0 0" Grid.Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="5*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock  Style="{StaticResource RegularText}" FontSize="{Binding UIFontSize}"  Text="Portfolio" Grid.Column="0" Margin="10 0"/>
                        <ComboBox x:Name="pofolioComboBox"  ItemsSource="{Binding Path=portfolioList}" 
                                   DisplayMemberPath="PortfolioName" Margin="0" FontSize="{Binding UIFontSize}" 
                                   SelectedIndex="{Binding Path=selectedPortfolioIndex, Mode=TwoWay}"  
                                   SelectedValuePath="PortfolioId" Grid.Column="1" Padding="{Binding generalOrderPadding}"  >
                            <!-- Using these two properties will result in the item not being displayed 
                              SelectedItem="{Binding selectedPortfolioItem, Mode=TwoWay}"
                                SelectedValue="{Binding Path=selectedPortfolionValue, Mode=TwoWay}"-->
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <i:InvokeCommandAction Command="{Binding portfolioCommand}"
                                                            CommandParameter="{Binding ElementName=pofolioComboBox, Path=SelectedItem}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="MouseEnter">
                                    <i:InvokeCommandAction Command="{Binding getPortfolioWikiInformation}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ComboBox>
                    </Grid>

                    <Grid  Margin="0 0 0 0" Grid.Row="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="4*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock  Style="{StaticResource RegularText}" FontSize="{Binding UIFontSize}"  Text="Department" Grid.Column="0" Margin="10 0"  Width="Auto"/>
                        <TextBlock Grid.Column="1" FontSize="{Binding UIFontSize}"   Style="{StaticResource RegularText}" Text="{Binding departmentTitle}"  Width="Auto"/>
                        <TextBlock Grid.Column="2" FontSize="{Binding UIFontSize}"  HorizontalAlignment="Center" Style="{StaticResource RegularText}" Text="{Binding deptCode}"   Width="Auto"/>
                    </Grid>


                    <Grid  Margin="0 0 0 0" Grid.Row="4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="5*"/>
                        </Grid.ColumnDefinitions>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="10*"/>
                            </Grid.RowDefinitions>
                            <TextBlock FontSize="{Binding UIFontSize}"  Style="{StaticResource RegularText}" Text="Comments" Grid.Row="0" Grid.Column="0" VerticalAlignment="Top" Margin="10 0" />
                            <CheckBox  Grid.Column="0" Grid.Row="1" FontSize="{Binding UIFontSize}"  IsChecked="{Binding CheckBoxIsExcept, Mode=TwoWay}" 
                                         IsEnabled="{Binding CheckBoxIsExceptEnabled, Mode=TwoWay}"
                                                 Background="{StaticResource WordOrangeBrush}" Margin="0" Padding="10 0 0 0" Command="{Binding cbChecked}"
                                                 Foreground="{StaticResource ForegroundVeryDarkBrush}"   VerticalAlignment="Top" HorizontalAlignment="Center">
                                <CheckBox.Content>
                                    <TextBlock Text="Is Except" Padding="2 0 10 0"  TextWrapping="Wrap"/>
                                </CheckBox.Content>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseEnter">
                                        <i:InvokeCommandAction Command="{Binding getIsExceptRBWikiInformation}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </CheckBox>
                        </Grid>


                        <core:BindableRichTextBox x:Name="individualUploadRichTextBox" Document="{Binding Path=flowDoc, Mode=TwoWay}" 
                                                   Grid.Column="1" Padding="{Binding generalOrderPadding}" Height="{Binding actAdminIndividualDetailsRichTextBoxHeight}"
                                                  Foreground="{StaticResource ForegroundMainBrush}" Margin="0"  VerticalScrollBarVisibility="Visible">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="KeyUp">
                                    <i:InvokeCommandAction Command="{Binding deleteTextRTBblock}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="MouseEnter">
                                    <i:InvokeCommandAction Command="{Binding getCommentsWikiInformation}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <core:BindableRichTextBox.InputBindings>
                                <KeyBinding 
                                    Key="Tab" 
                                    Command="{Binding insertTextRTB}" />
                                <KeyBinding 
                                    Key="Return" 
                                    Command="{Binding insertTextRTBblock}" />
                                <!--<KeyBinding 
                                    Key="Backspace" 
                                    Command="{Binding deleteTextRTBblock}" />-->
                            </core:BindableRichTextBox.InputBindings>
                        </core:BindableRichTextBox>
                    </Grid>

                    <Grid  Margin="0 0 0 0" Grid.Row="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="3*" />
                            <ColumnDefinition Width="2*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock  Style="{StaticResource RegularText}" FontSize="{Binding UIFontSize}"  Text="Effective Date" Grid.Column="0" Margin="10 0"  Width="Auto" />
                        <core:DatePickerHelper Grid.Column="1"  SelectedDate="{Binding Path=effectiveDatePicker, Mode=TwoWay}" >
                            <DatePicker.Template>
                                <ControlTemplate TargetType="DatePicker">
                                    <Grid x:Name="PART_Root" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="2*"/>
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <TextBox TextAlignment="Center" FontSize="{Binding UIFontSize}" Grid.Column="0" VerticalAlignment="Center" IsEnabled="True" HorizontalAlignment="Center"
                                                 x:Name="PART_TextBox" Padding="0" 
                                                 Text="{Binding SelectedDate, StringFormat = {}{0:dd-MM-yyyy},  
                                                       RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}}" >
                                        </TextBox>
                                        <Button  Grid.Column="1" x:Name="PART_Button" FontSize="{Binding UIFontSize}" Content="Select Date" Padding="{Binding generalOrderPadding}" Margin="{Binding generalOrderPadding}"/>
                                        <Popup x:Name="PART_Popup"
                                               AllowsTransparency="True" 
                                               Placement="Bottom"  
                                               PlacementTarget="{Binding ElementName=PART_Button}" 
                                               StaysOpen="False" />
                                    </Grid>
                                </ControlTemplate>
                            </DatePicker.Template>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseEnter">
                                    <i:InvokeCommandAction Command="{Binding getEffectiveDateWikiInformation}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="MouseLeftButtonDown">
                                    <i:InvokeCommandAction Command="{Binding getSelectedDate}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </core:DatePickerHelper>

                        <!--<CheckBox  Grid.Column="2" Grid.Row="0" FontSize="{Binding UIFontSize}"  IsChecked="{Binding CheckBoxIsExcept, Mode=TwoWay}" 
                                                 Background="{StaticResource WordOrangeBrush}" Margin="0" Padding="10 0 0 0" Command="{Binding cbChecked}"
                                                 Foreground="{StaticResource ForegroundVeryDarkBrush}"   VerticalAlignment="Center" HorizontalAlignment="Center">
                            <CheckBox.Content>
                                <TextBlock Text="Is Except" Padding="2 0 10 0"  TextWrapping="Wrap"/>
                            </CheckBox.Content>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseEnter">
                                    <i:InvokeCommandAction Command="{Binding getIsExceptRBWikiInformation}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </CheckBox>-->

                    </Grid>


                    <Grid  Margin="0 0 0 0" Grid.Row="6">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="2*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Button Command=  "{Binding btnBackAndSave}" FontSize="{Binding UIFontSize}"  x:Name="btnBackAndSave" Visibility="{Binding btnBackAndSaveVisible}" 
                                Content="Save and return" Grid.Column="0" Padding="{Binding generalOrderPadding}" Margin="{Binding generalOrderPadding}"  VerticalAlignment="Top"  >
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseEnter">
                                    <i:InvokeCommandAction Command="{Binding getBackAndSaveBtnWikiInformation}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                        <Button  Command= "{Binding btnCancel}" FontSize="{Binding UIFontSize}"  x:Name="btnCancel" Content="Cancel" Grid.Column="2" Padding="{Binding generalOrderPadding}" Margin="{Binding generalOrderPadding}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseEnter">
                                    <i:InvokeCommandAction Command="{Binding getCancelBtnWikiInformation}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                    </Grid>

                </Grid>
            </Border>
            <!-- Side Menu -->
            <local:Wiki  Background="White" Grid.Column="1" VerticalAlignment="Top" />

        </Grid>

    </StackPanel>

</UserControl>
